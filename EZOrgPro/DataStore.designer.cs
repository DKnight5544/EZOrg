#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EZOrgPro
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="dwk-multiple-projects")]
	public partial class DataStoreDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertLink(Link instance);
    partial void UpdateLink(Link instance);
    partial void DeleteLink(Link instance);
    #endregion
		
		public DataStoreDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["dwk_multiple_projectsConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataStoreDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataStoreDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataStoreDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataStoreDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Link> Links
		{
			get
			{
				return this.GetTable<Link>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="ll.AddLink")]
		public ISingleResult<Link> AddLink([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ParentKey", DbType="VarChar(36)")] string parentKey)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), parentKey);
			return ((ISingleResult<Link>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="ll.DeleteLink")]
		public int DeleteLink([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Key", DbType="Char(36)")] string key)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), key);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="ll.EditLink")]
		public ISingleResult<Link> EditLink([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Key", DbType="Char(36)")] string key, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Text", DbType="NVarChar(50)")] string text, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Url", DbType="NVarChar(2083)")] string url, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AllowEditing", DbType="Bit")] System.Nullable<bool> allowEditing, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AllowAdding", DbType="Bit")] System.Nullable<bool> allowAdding)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), key, text, url, allowEditing, allowAdding);
			return ((ISingleResult<Link>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="ll.GetLink")]
		public ISingleResult<Link> GetLink([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Key", DbType="Char(36)")] string key)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), key);
			return ((ISingleResult<Link>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="ll.GetLinks")]
		public ISingleResult<Link> GetLinks([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Key", DbType="Char(36)")] string key)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), key);
			return ((ISingleResult<Link>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ll.Links")]
	public partial class Link : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Key;
		
		private string _Text;
		
		private string _Url;
		
		private string _ParentKey;
		
		private long _SortIndex;
		
		private bool _AllowEditing;
		
		private bool _AllowAdding;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(string value);
    partial void OnKeyChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnParentKeyChanging(string value);
    partial void OnParentKeyChanged();
    partial void OnSortIndexChanging(long value);
    partial void OnSortIndexChanged();
    partial void OnAllowEditingChanging(bool value);
    partial void OnAllowEditingChanged();
    partial void OnAllowAddingChanging(bool value);
    partial void OnAllowAddingChanged();
    #endregion
		
		public Link()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Key]", Storage="_Key", DbType="VarChar(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(2083)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentKey", DbType="Char(36)")]
		public string ParentKey
		{
			get
			{
				return this._ParentKey;
			}
			set
			{
				if ((this._ParentKey != value))
				{
					this.OnParentKeyChanging(value);
					this.SendPropertyChanging();
					this._ParentKey = value;
					this.SendPropertyChanged("ParentKey");
					this.OnParentKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this.OnSortIndexChanging(value);
					this.SendPropertyChanging();
					this._SortIndex = value;
					this.SendPropertyChanged("SortIndex");
					this.OnSortIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowEditing", DbType="Bit NOT NULL")]
		public bool AllowEditing
		{
			get
			{
				return this._AllowEditing;
			}
			set
			{
				if ((this._AllowEditing != value))
				{
					this.OnAllowEditingChanging(value);
					this.SendPropertyChanging();
					this._AllowEditing = value;
					this.SendPropertyChanged("AllowEditing");
					this.OnAllowEditingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowAdding", DbType="Bit NOT NULL")]
		public bool AllowAdding
		{
			get
			{
				return this._AllowAdding;
			}
			set
			{
				if ((this._AllowAdding != value))
				{
					this.OnAllowAddingChanging(value);
					this.SendPropertyChanging();
					this._AllowAdding = value;
					this.SendPropertyChanged("AllowAdding");
					this.OnAllowAddingChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
